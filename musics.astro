---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';

// Mock music data
const musicTracks = [
  {
    id: 1,
    title: "The Staple Singers - I'll Take You There (Full Length Version)",
    duration: "4:36",
    artist: "The Staple Singers",
    audioUrl: "/audio/sample-track-1.mp3"
  },
  {
    id: 2,
    title: "America The Beautiful (Lyrics)",
    duration: "3:38",
    artist: "Traditional",
    audioUrl: "/audio/sample-track-2.mp3"
  },
  {
    id: 3,
    title: "Brett Young - Lady",
    duration: "3:25",
    artist: "Brett Young",
    audioUrl: "/audio/sample-track-3.mp3"
  }
];
---

<Layout title="Musics - Aloba Books">
  <Navigation />
  
  <main>
    <!-- Hero Section -->
    <section class="relative py-24 bg-gradient-to-br from-teal-500 via-teal-600 to-teal-700">
      <div class="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(255,255,255,0.1)_0%,transparent_70%)]"></div>
      <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-4xl lg:text-5xl font-bold text-white mb-4">Harmonies of the Soul</h1>
        <h2 class="text-2xl lg:text-3xl font-light text-teal-100">Explore Our Music Collection</h2>
      </div>
    </section>
    
    <!-- Background Music Player -->
    <section class="py-8 bg-gray-100">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">Background Musics</h3>
          <div class="flex items-center space-x-4">
            <button id="playPauseBtn" class="w-12 h-12 bg-teal-600 hover:bg-teal-700 rounded-full flex items-center justify-center text-white transition-colors">
              <svg id="playIcon" class="w-6 h-6 ml-1" fill="currentColor" viewBox="0 0 24 24">
                <path d="M8 5v14l11-7z"/>
              </svg>
              <svg id="pauseIcon" class="w-6 h-6 hidden" fill="currentColor" viewBox="0 0 24 24">
                <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>
              </svg>
            </button>
            
            <div class="flex-1">
              <div class="flex items-center justify-between text-sm text-gray-600 mb-1">
                <span id="currentTime">00:00</span>
                <span id="duration">4:36</span>
              </div>
              <div class="w-full bg-gray-200 rounded-full h-2">
                <div id="progressBar" class="bg-teal-600 h-2 rounded-full" style="width: 0%"></div>
              </div>
            </div>
            
            <div class="flex items-center space-x-2">
              <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M9 12a3 3 0 106 0 3 3 0 00-6 0z"></path>
              </svg>
              <input type="range" min="0" max="100" value="50" class="w-20 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer">
            </div>
          </div>
        </div>
      </div>
    </section>
    
    <!-- Music Tracks List -->
    <section class="py-16 bg-white">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="space-y-4">
          {musicTracks.map((track, index) => (
            <div class="bg-teal-50 rounded-lg p-6 hover:bg-teal-100 transition-colors">
              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                  <span class="text-lg font-semibold text-teal-600 w-8">
                    {index + 1}
                  </span>
                  
                  <button class="w-10 h-10 bg-teal-600 hover:bg-teal-700 rounded-full flex items-center justify-center text-white transition-colors">
                    <svg class="w-5 h-5 ml-0.5" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M8 5v14l11-7z"/>
                    </svg>
                  </button>
                  
                  <div>
                    <h3 class="text-lg font-semibold text-gray-900">
                      {track.title}
                    </h3>
                    <p class="text-sm text-gray-600">{track.artist}</p>
                  </div>
                </div>
                
                <div class="text-right">
                  <span class="text-sm text-gray-600">{track.duration}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
        
        <!-- Load More Button -->
        <div class="text-center mt-12">
          <button class="bg-teal-600 hover:bg-teal-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors">
            Load More Tracks
          </button>
        </div>
      </div>
    </section>
    
    <!-- Music Features -->
    <section class="py-16 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="text-3xl font-bold text-gray-900 text-center mb-12">Music Experience</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div class="text-center">
            <div class="w-16 h-16 bg-teal-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"></path>
              </svg>
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">Curated Playlists</h3>
            <p class="text-gray-600">Handpicked music for every mood and moment</p>
          </div>
          
          <div class="text-center">
            <div class="w-16 h-16 bg-teal-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M9 12a3 3 0 106 0 3 3 0 00-6 0z"></path>
              </svg>
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">High Quality Audio</h3>
            <p class="text-gray-600">Crystal clear sound for the best listening experience</p>
          </div>
          
          <div class="text-center">
            <div class="w-16 h-16 bg-teal-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
              </svg>
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">Soul Touching</h3>
            <p class="text-gray-600">Music that speaks to the heart and soul</p>
          </div>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</Layout>

<script>
  // Simple audio player functionality
  document.addEventListener('DOMContentLoaded', function() {
    const playPauseBtn = document.getElementById('playPauseBtn');
    const playIcon = document.getElementById('playIcon');
    const pauseIcon = document.getElementById('pauseIcon');
    const progressBar = document.getElementById('progressBar');
    const currentTimeSpan = document.getElementById('currentTime');
    
    let isPlaying = false;
    let currentTime = 0;
    const duration = 276; // 4:36 in seconds
    
    playPauseBtn?.addEventListener('click', function() {
      isPlaying = !isPlaying;
      
      if (isPlaying) {
        playIcon?.classList.add('hidden');
        pauseIcon?.classList.remove('hidden');
        // Start playing simulation
        startPlayback();
      } else {
        playIcon?.classList.remove('hidden');
        pauseIcon?.classList.add('hidden');
        // Pause playback
        stopPlayback();
      }
    });
    
    let playbackInterval: number;
    
    function startPlayback() {
      playbackInterval = setInterval(() => {
        currentTime += 1;
        if (currentTime >= duration) {
          currentTime = 0;
          isPlaying = false;
          playIcon?.classList.remove('hidden');
          pauseIcon?.classList.add('hidden');
          clearInterval(playbackInterval);
        }
        updateProgress();
      }, 1000);
    }
    
    function stopPlayback() {
      clearInterval(playbackInterval);
    }
    
    function updateProgress() {
      const progress = (currentTime / duration) * 100;
      if (progressBar) {
        progressBar.style.width = `${progress}%`;
      }
      
      const minutes = Math.floor(currentTime / 60);
      const seconds = currentTime % 60;
      const timeString = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
      
      if (currentTimeSpan) {
        currentTimeSpan.textContent = timeString;
      }
    }
  });
</script>

